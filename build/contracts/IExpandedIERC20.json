{
  "contractName": "IExpandedIERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"burn(address,uint256)\":{\"details\":\"Only burns the caller's tokens, so it is safe to leave this method permissionless.\"},\"mint(address,uint256)\":{\"details\":\"This method should be permissioned to only allow designated parties to mint tokens.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}},\"title\":\"ERC20 interface that includes burn and mint methods.\"},\"userdoc\":{\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Burns a specific amount of the caller's tokens.\"},\"mint(address,uint256)\":{\"notice\":\"Mints tokens and adds them to the balance of the `to` address.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IExpandedIERC20.sol\":\"IExpandedIERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7521d73c0b2001a87ce17fdc3ff40191c0b7893b0c48a695011d615d8fda254f\",\"urls\":[\"bzz-raw://a8e2574c57b1cd86bb792748ad24bc1d7d62cce413f18d029a0217456926b067\",\"dweb:/ipfs/QmUuF5cqnokP3MAQtu4VKnewB8F5tycbvmAqbgEuQu7tTt\"]},\"project:/contracts/interfaces/IExpandedIERC20.sol\":{\"keccak256\":\"0x360f2d14ef5eba60efed924a7b5d9bdc58483d3846373f76cbd26f5dc30e3df3\",\"urls\":[\"bzz-raw://62a5adf22cf8caa0aedc76c3a2999d8c6c9e7188dc0dcd41694484ef929a8120\",\"dweb:/ipfs/QmefqpGt5f6GcvxBF6cuATYb6ThC9rNGk1k1S7FbMunF1U\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.0;\n\nimport \"./IERC20.sol\";\n\n\n/**\n * @title ERC20 interface that includes burn and mint methods.\n */\nabstract contract IExpandedIERC20 is IERC20 {\n    /**\n     * @notice Burns a specific amount of the caller's tokens.\n     * @dev Only burns the caller's tokens, so it is safe to leave this method permissionless.\n     */\n    function burn(address from, uint256 value) external virtual;\n\n    /**\n     * @notice Mints tokens and adds them to the balance of the `to` address.\n     * @dev This method should be permissioned to only allow designated parties to mint tokens.\n     */\n    function mint(address to, uint256 value) external virtual returns (bool);\n}\n",
  "sourcePath": "/mnt/d/HARMONY/GRANT-PROPOSAL/TEBS-APP/harmony-hack-main/contracts/contracts/interfaces/IExpandedIERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IExpandedIERC20.sol",
    "exportedSymbols": {
      "IExpandedIERC20": [
        6552
      ]
    },
    "id": 6553,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6529,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 6530,
        "nodeType": "ImportDirective",
        "scope": 6553,
        "sourceUnit": 6528,
        "src": "25:22:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6532,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6527,
              "src": "158:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6527",
                "typeString": "contract IERC20"
              }
            },
            "id": 6533,
            "nodeType": "InheritanceSpecifier",
            "src": "158:6:10"
          }
        ],
        "contractDependencies": [
          6527
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6531,
          "nodeType": "StructuredDocumentation",
          "src": "50:70:10",
          "text": "@title ERC20 interface that includes burn and mint methods."
        },
        "fullyImplemented": false,
        "id": 6552,
        "linearizedBaseContracts": [
          6552,
          6527
        ],
        "name": "IExpandedIERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 6534,
              "nodeType": "StructuredDocumentation",
              "src": "171:169:10",
              "text": "@notice Burns a specific amount of the caller's tokens.\n@dev Only burns the caller's tokens, so it is safe to leave this method permissionless."
            },
            "functionSelector": "9dc29fac",
            "id": 6541,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6536,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6541,
                  "src": "359:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6538,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6541,
                  "src": "373:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:29:10"
            },
            "returnParameters": {
              "id": 6540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:10"
            },
            "scope": 6552,
            "src": "345:60:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 6542,
              "nodeType": "StructuredDocumentation",
              "src": "411:185:10",
              "text": "@notice Mints tokens and adds them to the balance of the `to` address.\n@dev This method should be permissioned to only allow designated parties to mint tokens."
            },
            "functionSelector": "40c10f19",
            "id": 6551,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6544,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6551,
                  "src": "615:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6546,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6551,
                  "src": "627:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "614:27:10"
            },
            "returnParameters": {
              "id": 6550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6549,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6551,
                  "src": "668:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6548,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "667:6:10"
            },
            "scope": 6552,
            "src": "601:73:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6553,
        "src": "121:555:10"
      }
    ],
    "src": "0:677:10"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/interfaces/IExpandedIERC20.sol",
      "exportedSymbols": {
        "IExpandedIERC20": [
          6552
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 6529,
        "name": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "attributes": {
          "SourceUnit": 6528,
          "absolutePath": "project:/contracts/interfaces/IERC20.sol",
          "file": "./IERC20.sol",
          "scope": 6553,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6530,
        "name": "ImportDirective",
        "src": "25:22:10"
      },
      {
        "attributes": {
          "abstract": true,
          "contractDependencies": [
            6527
          ],
          "contractKind": "contract",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            6552,
            6527
          ],
          "name": "IExpandedIERC20",
          "scope": 6553
        },
        "children": [
          {
            "attributes": {
              "text": "@title ERC20 interface that includes burn and mint methods."
            },
            "id": 6531,
            "name": "StructuredDocumentation",
            "src": "50:70:10"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IERC20",
                  "referencedDeclaration": 6527,
                  "type": "contract IERC20"
                },
                "id": 6532,
                "name": "UserDefinedTypeName",
                "src": "158:6:10"
              }
            ],
            "id": 6533,
            "name": "InheritanceSpecifier",
            "src": "158:6:10"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "9dc29fac",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "burn",
              "overrides": null,
              "scope": 6552,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Burns a specific amount of the caller's tokens.\n@dev Only burns the caller's tokens, so it is safe to leave this method permissionless."
                },
                "id": 6534,
                "name": "StructuredDocumentation",
                "src": "171:169:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "from",
                      "overrides": null,
                      "scope": 6541,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6535,
                        "name": "ElementaryTypeName",
                        "src": "359:7:10"
                      }
                    ],
                    "id": 6536,
                    "name": "VariableDeclaration",
                    "src": "359:12:10"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "value",
                      "overrides": null,
                      "scope": 6541,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6537,
                        "name": "ElementaryTypeName",
                        "src": "373:7:10"
                      }
                    ],
                    "id": 6538,
                    "name": "VariableDeclaration",
                    "src": "373:13:10"
                  }
                ],
                "id": 6539,
                "name": "ParameterList",
                "src": "358:29:10"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6540,
                "name": "ParameterList",
                "src": "404:0:10"
              }
            ],
            "id": 6541,
            "name": "FunctionDefinition",
            "src": "345:60:10"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "40c10f19",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "overrides": null,
              "scope": 6552,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Mints tokens and adds them to the balance of the `to` address.\n@dev This method should be permissioned to only allow designated parties to mint tokens."
                },
                "id": 6542,
                "name": "StructuredDocumentation",
                "src": "411:185:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "overrides": null,
                      "scope": 6551,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6543,
                        "name": "ElementaryTypeName",
                        "src": "615:7:10"
                      }
                    ],
                    "id": 6544,
                    "name": "VariableDeclaration",
                    "src": "615:10:10"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "value",
                      "overrides": null,
                      "scope": 6551,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6545,
                        "name": "ElementaryTypeName",
                        "src": "627:7:10"
                      }
                    ],
                    "id": 6546,
                    "name": "VariableDeclaration",
                    "src": "627:13:10"
                  }
                ],
                "id": 6547,
                "name": "ParameterList",
                "src": "614:27:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 6551,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 6548,
                        "name": "ElementaryTypeName",
                        "src": "668:4:10"
                      }
                    ],
                    "id": 6549,
                    "name": "VariableDeclaration",
                    "src": "668:4:10"
                  }
                ],
                "id": 6550,
                "name": "ParameterList",
                "src": "667:6:10"
              }
            ],
            "id": 6551,
            "name": "FunctionDefinition",
            "src": "601:73:10"
          }
        ],
        "id": 6552,
        "name": "ContractDefinition",
        "src": "121:555:10"
      }
    ],
    "id": 6553,
    "name": "SourceUnit",
    "src": "0:677:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.3+commit.8dda9521.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-12-22T18:59:35.115Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "burn(address,uint256)": {
        "details": "Only burns the caller's tokens, so it is safe to leave this method permissionless."
      },
      "mint(address,uint256)": {
        "details": "This method should be permissioned to only allow designated parties to mint tokens."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
      }
    },
    "title": "ERC20 interface that includes burn and mint methods."
  },
  "userdoc": {
    "methods": {
      "burn(address,uint256)": {
        "notice": "Burns a specific amount of the caller's tokens."
      },
      "mint(address,uint256)": {
        "notice": "Mints tokens and adds them to the balance of the `to` address."
      }
    }
  }
}