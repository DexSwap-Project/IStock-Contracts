{
  "contractName": "UST",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "faucet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mocks/UST.sol\":\"UST\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8610316b7096a19d9f99ae7587e393f1039211fd82d541e26a0693a76e8bc570\",\"urls\":[\"bzz-raw://cb7ca41b389fc0b5de53802af64d86ad0c92b4704eeb695bfabc7e79769fd64c\",\"dweb:/ipfs/Qmd6LUJURrcN7RBSLoporoAAeJ8cWtjGT96QKCaCeCofKN\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7521d73c0b2001a87ce17fdc3ff40191c0b7893b0c48a695011d615d8fda254f\",\"urls\":[\"bzz-raw://a8e2574c57b1cd86bb792748ad24bc1d7d62cce413f18d029a0217456926b067\",\"dweb:/ipfs/QmUuF5cqnokP3MAQtu4VKnewB8F5tycbvmAqbgEuQu7tTt\"]},\"project:/contracts/mocks/UST.sol\":{\"keccak256\":\"0xc78f58ebd8754f2c7f8174e65daba803100d518fca9069e1750db1bb4941e875\",\"urls\":[\"bzz-raw://8d3eb46b071d98cb530740157310dec1f6b69de9558a480a4cb65d4c1d8eee1b\",\"dweb:/ipfs/QmW1bJ6j1Dqn2QUxD1fXDJttrmLcAG9tPfsx1hcxBSrZBo\"]},\"project:/contracts/utility/Address.sol\":{\"keccak256\":\"0xf6ef080fad8534f258b526768063c666e701b135ec3bde9bdffc77254e399515\",\"urls\":[\"bzz-raw://043eada9acabd207d4aaa1706ca581c514ba75e8ec9183a805ff8d1f25ccd445\",\"dweb:/ipfs/QmU6fLUSyR7YSMVtcGtj5epEvpxDBERGMS5L92WG7JKQVH\"]},\"project:/contracts/utility/ERC20.sol\":{\"keccak256\":\"0xf16c3458e736d9209308668d6ca98039819837bf9ca42c86ba8487ce545ca07b\",\"urls\":[\"bzz-raw://069cc4dc2e7816bd76720052fc93fa323621729cfe8f627e1bf9207b1e9a0f3b\",\"dweb:/ipfs/QmVtyQRpuJuzFSt2KpGch72BdYZGvwcM3U4XDApyTw6ffn\"]},\"project:/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0xf145131f5414806455fc2c045f6c4769adc59388f742c241a236f589130d7e12\",\"urls\":[\"bzz-raw://1cd016b780299d2204117efaa8afa3b892d005ca47688e6b4ca2ea9498bcc00f\",\"dweb:/ipfs/QmZNazQYnGZNZvDGNMf7AE7kA6KH3cdDrT6XCvgbY21gQJ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f7138038062000f71833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001b890600390602085019062000385565b508051620001ce90600490602084019062000385565b50506005805460ff1916601217905550620001fe336a084595161401484a0000006001600160e01b036200020616565b50506200042a565b6001600160a01b03821662000262576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b62000279600083836001600160e01b036200031e16565b62000295816002546200032360201b6200089e1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002c89183906200089e62000323821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b6000828201838110156200037e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003c857805160ff1916838001178555620003f8565b82800160010185558215620003f8579182015b82811115620003f8578251825591602001919060010190620003db565b50620004069291506200040a565b5090565b6200042791905b8082111562000406576000815560010162000411565b90565b610b37806200043a6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461021057806395d89b4114610236578063a457c2d71461023e578063a9059cbb1461026a578063dd62ed3e14610296578063de5f72fd146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102ce565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610364565b604080519115158252519081900360200190f35b61017e610381565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610387565b6101ce610414565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b03813516906020013561041d565b61017e6004803603602081101561022657600080fd5b50356001600160a01b0316610471565b6100c161048c565b6101626004803603604081101561025457600080fd5b506001600160a01b0381351690602001356104ed565b6101626004803603604081101561028057600080fd5b506001600160a01b03813516906020013561055b565b61017e600480360360408110156102ac57600080fd5b506001600160a01b038135811691602001351661056f565b6102cc61059a565b005b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b60006103786103716105b0565b84846105b4565b50600192915050565b60025490565b60006103948484846106a0565b61040a846103a06105b0565b61040585604051806060016040528060288152602001610a6c602891396001600160a01b038a166000908152600160205260408120906103de6105b0565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61080716565b6105b4565b5060019392505050565b60055460ff1690565b600061037861042a6105b0565b84610405856001600061043b6105b0565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61089e16565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035a5780601f1061032f5761010080835404028352916020019161035a565b60006103786104fa6105b0565b8461040585604051806060016040528060258152602001610add60259139600160006105246105b0565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61080716565b60006103786105686105b0565b84846106a0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105ae3369021e19e0c9bab24000006108ff565b565b3390565b6001600160a01b0383166105f95760405162461bcd60e51b8152600401808060200182810382526024815260200180610ab96024913960400191505060405180910390fd5b6001600160a01b03821661063e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610a246022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106e55760405162461bcd60e51b8152600401808060200182810382526025815260200180610a946025913960400191505060405180910390fd5b6001600160a01b03821661072a5760405162461bcd60e51b8152600401808060200182810382526023815260200180610a016023913960400191505060405180910390fd5b6107358383836109fb565b61077881604051806060016040528060268152602001610a46602691396001600160a01b038616600090815260208190526040902054919063ffffffff61080716565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107ad908263ffffffff61089e16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108965760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561085b578181015183820152602001610843565b50505050905090810190601f1680156108885780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108f8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661095a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610966600083836109fb565b600254610979908263ffffffff61089e16565b6002556001600160a01b0382166000908152602081905260409020546109a5908263ffffffff61089e16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122036e9acb46c19599c89d69c91141ef260c0c62762ff5a19f507d1cc7300e1cc2164736f6c63430006030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461021057806395d89b4114610236578063a457c2d71461023e578063a9059cbb1461026a578063dd62ed3e14610296578063de5f72fd146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102ce565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610364565b604080519115158252519081900360200190f35b61017e610381565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610387565b6101ce610414565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b03813516906020013561041d565b61017e6004803603602081101561022657600080fd5b50356001600160a01b0316610471565b6100c161048c565b6101626004803603604081101561025457600080fd5b506001600160a01b0381351690602001356104ed565b6101626004803603604081101561028057600080fd5b506001600160a01b03813516906020013561055b565b61017e600480360360408110156102ac57600080fd5b506001600160a01b038135811691602001351661056f565b6102cc61059a565b005b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b60006103786103716105b0565b84846105b4565b50600192915050565b60025490565b60006103948484846106a0565b61040a846103a06105b0565b61040585604051806060016040528060288152602001610a6c602891396001600160a01b038a166000908152600160205260408120906103de6105b0565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61080716565b6105b4565b5060019392505050565b60055460ff1690565b600061037861042a6105b0565b84610405856001600061043b6105b0565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61089e16565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035a5780601f1061032f5761010080835404028352916020019161035a565b60006103786104fa6105b0565b8461040585604051806060016040528060258152602001610add60259139600160006105246105b0565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61080716565b60006103786105686105b0565b84846106a0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105ae3369021e19e0c9bab24000006108ff565b565b3390565b6001600160a01b0383166105f95760405162461bcd60e51b8152600401808060200182810382526024815260200180610ab96024913960400191505060405180910390fd5b6001600160a01b03821661063e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610a246022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106e55760405162461bcd60e51b8152600401808060200182810382526025815260200180610a946025913960400191505060405180910390fd5b6001600160a01b03821661072a5760405162461bcd60e51b8152600401808060200182810382526023815260200180610a016023913960400191505060405180910390fd5b6107358383836109fb565b61077881604051806060016040528060268152602001610a46602691396001600160a01b038616600090815260208190526040902054919063ffffffff61080716565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107ad908263ffffffff61089e16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108965760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561085b578181015183820152602001610843565b50505050905090810190601f1680156108885780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108f8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661095a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610966600083836109fb565b600254610979908263ffffffff61089e16565b6002556001600160a01b0382166000908152602081905260409020546109a5908263ffffffff61089e16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122036e9acb46c19599c89d69c91141ef260c0c62762ff5a19f507d1cc7300e1cc2164736f6c63430006030033",
  "sourceMap": "57:277:16:-:0;;;85:160;5:9:-1;2:2;;;27:1;24;17:12;2:2;85:160:16;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;85:160:16;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;85:160:16;;420:4:-1;411:14;;;;85:160:16;;;;;411:14:-1;85:160:16;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;85:160:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;85:160:16;;420:4:-1;411:14;;;;85:160:16;;;;;411:14:-1;85:160:16;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;85:160:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;85:160:16;;-1:-1:-1;;2069:12:18;;174:4:16;;-1:-1:-1;180:6:16;;2069:12:18;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2091:16:18;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2117:9:18;:14;;-1:-1:-1;;2117:14:18;2129:2;2117:14;;;-1:-1:-1;198:40:16::1;204:10;216:21;-1:-1:-1::0;;;;;198:5:16::1;:40:::0;:::i:1;:::-;85:160:::0;;57:277;;7819:370:18;-1:-1:-1;;;;;7902:21:18;;7894:65;;;;;-1:-1:-1;;;7894:65:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;7970:49;7999:1;8003:7;8012:6;-1:-1:-1;;;;;7970:20:18;:49;:::i;:::-;8045:24;8062:6;8045:12;;:16;;;;;;:24;;;;:::i;:::-;8030:12;:39;-1:-1:-1;;;;;8100:18:18;;:9;:18;;;;;;;;;;;;:30;;8123:6;;8100:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8079:18:18;;:9;:18;;;;;;;;;;;:51;;;;8145:37;;;;;;;8079:18;;:9;;8145:37;;;;;;;;;;7819:370;;:::o;10681:92::-;;;;:::o;834:176:25:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:25:o;57:277:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:277:16;;;-1:-1:-1;57:277:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "57:277:16:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;57:277:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2203:81:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2203:81:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4239:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4239:166:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3246:98;;;:::i;:::-;;;;;;;;;;;;;;;;4865:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4865:317:18;;;;;;;;;;;;;;;;;:::i;3105:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5577:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5577:215:18;;;;;;;;:::i;3402:117::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3402:117:18;-1:-1:-1;;;;;3402:117:18;;:::i;2397:85::-;;;:::i;6279:266::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6279:266:18;;;;;;;;:::i;3722:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3722:172:18;;;;;;;;:::i;3952:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3952:149:18;;;;;;;;;;:::i;252:79:16:-;;;:::i;:::-;;2203:81:18;2272:5;2265:12;;;;;;;;-1:-1:-1;;2265:12:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:13;;2265:12;;2272:5;;2265:12;;2272:5;2265:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:81;:::o;4239:166::-;4322:4;4338:39;4347:12;:10;:12::i;:::-;4361:7;4370:6;4338:8;:39::i;:::-;-1:-1:-1;4394:4:18;4239:166;;;;:::o;3246:98::-;3325:12;;3246:98;:::o;4865:317::-;4971:4;4987:36;4997:6;5005:9;5016:6;4987:9;:36::i;:::-;5033:121;5042:6;5050:12;:10;:12::i;:::-;5064:89;5102:6;5064:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5064:19:18;;;;;;:11;:19;;;;;;5084:12;:10;:12::i;:::-;-1:-1:-1;;;;;5064:33:18;;;;;;;;;;;;-1:-1:-1;5064:33:18;;;:89;;:37;:89;:::i;:::-;5033:8;:121::i;:::-;-1:-1:-1;5171:4:18;4865:317;;;;;:::o;3105:81::-;3170:9;;;;3105:81;:::o;5577:215::-;5665:4;5681:83;5690:12;:10;:12::i;:::-;5704:7;5713:50;5752:10;5713:11;:25;5725:12;:10;:12::i;:::-;-1:-1:-1;;;;;5713:25:18;;;;;;;;;;;;;;;;;-1:-1:-1;5713:25:18;;;:34;;;;;;;;;;;:50;:38;:50;:::i;3402:117::-;-1:-1:-1;;;;;3494:18:18;3468:7;3494:18;;;;;;;;;;;;3402:117::o;2397:85::-;2468:7;2461:14;;;;;;;;-1:-1:-1;;2461:14:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2436:13;;2461:14;;2468:7;;2461:14;;2468:7;2461:14;;;;;;;;;;;;;;;;;;;;;;;;6279:266;6372:4;6388:129;6397:12;:10;:12::i;:::-;6411:7;6420:96;6459:15;6420:96;;;;;;;;;;;;;;;;;:11;:25;6432:12;:10;:12::i;:::-;-1:-1:-1;;;;;6420:25:18;;;;;;;;;;;;;;;;;-1:-1:-1;6420:25:18;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3722:172::-;3808:4;3824:42;3834:12;:10;:12::i;:::-;3848:9;3859:6;3824:9;:42::i;3952:149::-;-1:-1:-1;;;;;4067:18:18;;;4041:7;4067:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3952:149::o;252:79:16:-;287:37;293:10;305:18;287:5;:37::i;:::-;252:79::o;735:104:2:-;822:10;735:104;:::o;9343:340:18:-;-1:-1:-1;;;;;9444:19:18;;9436:68;;;;-1:-1:-1;;;9436:68:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9522:21:18;;9514:68;;;;-1:-1:-1;;;9514:68:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9593:18:18;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9644:32;;;;;;;;;;;;;;;;;9343:340;;;:::o;7019:530::-;-1:-1:-1;;;;;7124:20:18;;7116:70;;;;-1:-1:-1;;;7116:70:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7204:23:18;;7196:71;;;;-1:-1:-1;;;7196:71:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7278:47;7299:6;7307:9;7318:6;7278:20;:47::i;:::-;7356:71;7378:6;7356:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7356:17:18;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7336:17:18;;;:9;:17;;;;;;;;;;;:91;;;;7460:20;;;;;;;:32;;7485:6;7460:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7437:20:18;;;:9;:20;;;;;;;;;;;;:55;;;;7507:35;;;;;;;7437:20;;7507:35;;;;;;;;;;;;;7019:530;;;:::o;1732:187:25:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:25;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:25:o;7819:370:18:-;-1:-1:-1;;;;;7902:21:18;;7894:65;;;;;-1:-1:-1;;;7894:65:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;7970:49;7999:1;8003:7;8012:6;7970:20;:49::i;:::-;8045:12;;:24;;8062:6;8045:24;:16;:24;:::i;:::-;8030:12;:39;-1:-1:-1;;;;;8100:18:18;;:9;:18;;;;;;;;;;;:30;;8123:6;8100:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8079:18:18;;:9;:18;;;;;;;;;;;:51;;;;8145:37;;;;;;;8079:18;;:9;;8145:37;;;;;;;;;;7819:370;;:::o;10681:92::-;;;;:::o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../utility/ERC20.sol\";\n\ncontract UST is ERC20 {\n    constructor(\n        string memory name,\n        string memory symbol\n    ) public ERC20(name, symbol) {\n        _mint(msg.sender, 10000000 * (10 ** 18));\n    }\n\n\n    function faucet() public {\n        _mint(msg.sender, 10000 * (10 ** 18));\n    }\n\n}",
  "sourcePath": "/mnt/d/HARMONY/GRANT-PROPOSAL/TEBS-APP/harmony-hack-main/contracts/contracts/mocks/UST.sol",
  "ast": {
    "absolutePath": "project:/contracts/mocks/UST.sol",
    "exportedSymbols": {
      "UST": [
        6809
      ]
    },
    "id": 6810,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6767,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "project:/contracts/utility/ERC20.sol",
        "file": "../utility/ERC20.sol",
        "id": 6768,
        "nodeType": "ImportDirective",
        "scope": 6810,
        "sourceUnit": 7613,
        "src": "25:30:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6769,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7612,
              "src": "73:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$7612",
                "typeString": "contract ERC20"
              }
            },
            "id": 6770,
            "nodeType": "InheritanceSpecifier",
            "src": "73:5:16"
          }
        ],
        "contractDependencies": [
          3968,
          6527,
          7612
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6809,
        "linearizedBaseContracts": [
          6809,
          7612,
          6527,
          3968
        ],
        "name": "UST",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6792,
              "nodeType": "Block",
              "src": "188:57:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6782,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "204:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "204:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000"
                        },
                        "id": 6789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030303030",
                          "id": 6784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "216:8:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000_by_1",
                            "typeString": "int_const 10000000"
                          },
                          "value": "10000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 6787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 6785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "228:2:16",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 6786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "234:2:16",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "228:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 6788,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "227:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "216:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000"
                        }
                      ],
                      "id": 6781,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7488,
                      "src": "198:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "198:40:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6791,
                  "nodeType": "ExpressionStatement",
                  "src": "198:40:16"
                }
              ]
            },
            "documentation": null,
            "id": 6793,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6777,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6772,
                    "src": "174:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6778,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6774,
                    "src": "180:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6779,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6776,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7612,
                  "src": "168:5:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$7612_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "168:19:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6772,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6793,
                  "src": "106:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6771,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "106:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6774,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6793,
                  "src": "134:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6773,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "96:64:16"
            },
            "returnParameters": {
              "id": 6780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:0:16"
            },
            "scope": 6809,
            "src": "85:160:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6807,
              "nodeType": "Block",
              "src": "277:54:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6797,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "293:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "293:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "id": 6804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030",
                          "id": 6799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "305:5:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 6802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 6800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "314:2:16",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 6801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "320:2:16",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "314:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 6803,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "313:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "305:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "id": 6796,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7488,
                      "src": "287:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "287:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6806,
                  "nodeType": "ExpressionStatement",
                  "src": "287:37:16"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "de5f72fd",
            "id": 6808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "faucet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "267:2:16"
            },
            "returnParameters": {
              "id": 6795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:0:16"
            },
            "scope": 6809,
            "src": "252:79:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6810,
        "src": "57:277:16"
      }
    ],
    "src": "0:334:16"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/mocks/UST.sol",
      "exportedSymbols": {
        "UST": [
          6809
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 6767,
        "name": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "attributes": {
          "SourceUnit": 7613,
          "absolutePath": "project:/contracts/utility/ERC20.sol",
          "file": "../utility/ERC20.sol",
          "scope": 6810,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6768,
        "name": "ImportDirective",
        "src": "25:30:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            3968,
            6527,
            7612
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6809,
            7612,
            6527,
            3968
          ],
          "name": "UST",
          "scope": 6810
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20",
                  "referencedDeclaration": 7612,
                  "type": "contract ERC20"
                },
                "id": 6769,
                "name": "UserDefinedTypeName",
                "src": "73:5:16"
              }
            ],
            "id": 6770,
            "name": "InheritanceSpecifier",
            "src": "73:5:16"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 6809,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "overrides": null,
                      "scope": 6793,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6771,
                        "name": "ElementaryTypeName",
                        "src": "106:6:16"
                      }
                    ],
                    "id": 6772,
                    "name": "VariableDeclaration",
                    "src": "106:18:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "overrides": null,
                      "scope": 6793,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6773,
                        "name": "ElementaryTypeName",
                        "src": "134:6:16"
                      }
                    ],
                    "id": 6774,
                    "name": "VariableDeclaration",
                    "src": "134:20:16"
                  }
                ],
                "id": 6775,
                "name": "ParameterList",
                "src": "96:64:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6780,
                "name": "ParameterList",
                "src": "188:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7612,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 6776,
                    "name": "Identifier",
                    "src": "168:5:16"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6772,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 6777,
                    "name": "Identifier",
                    "src": "174:4:16"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6774,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 6778,
                    "name": "Identifier",
                    "src": "180:6:16"
                  }
                ],
                "id": 6779,
                "name": "ModifierInvocation",
                "src": "168:19:16"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7488,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 6781,
                            "name": "Identifier",
                            "src": "198:5:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 6782,
                                "name": "Identifier",
                                "src": "204:3:16"
                              }
                            ],
                            "id": 6783,
                            "name": "MemberAccess",
                            "src": "204:10:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000000000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "int_const 10000000000000000000000000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130303030303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10000000",
                                  "value": "10000000"
                                },
                                "id": 6784,
                                "name": "Literal",
                                "src": "216:8:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 1000000000000000000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "int_const 1000000000000000000"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 6785,
                                        "name": "Literal",
                                        "src": "228:2:16"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3138",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 18",
                                          "value": "18"
                                        },
                                        "id": 6786,
                                        "name": "Literal",
                                        "src": "234:2:16"
                                      }
                                    ],
                                    "id": 6787,
                                    "name": "BinaryOperation",
                                    "src": "228:8:16"
                                  }
                                ],
                                "id": 6788,
                                "name": "TupleExpression",
                                "src": "227:10:16"
                              }
                            ],
                            "id": 6789,
                            "name": "BinaryOperation",
                            "src": "216:21:16"
                          }
                        ],
                        "id": 6790,
                        "name": "FunctionCall",
                        "src": "198:40:16"
                      }
                    ],
                    "id": 6791,
                    "name": "ExpressionStatement",
                    "src": "198:40:16"
                  }
                ],
                "id": 6792,
                "name": "Block",
                "src": "188:57:16"
              }
            ],
            "id": 6793,
            "name": "FunctionDefinition",
            "src": "85:160:16"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "de5f72fd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "faucet",
              "overrides": null,
              "scope": 6809,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6794,
                "name": "ParameterList",
                "src": "267:2:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6795,
                "name": "ParameterList",
                "src": "277:0:16"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7488,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 6796,
                            "name": "Identifier",
                            "src": "287:5:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 6797,
                                "name": "Identifier",
                                "src": "293:3:16"
                              }
                            ],
                            "id": 6798,
                            "name": "MemberAccess",
                            "src": "293:10:16"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "int_const 10000000000000000000000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10000",
                                  "value": "10000"
                                },
                                "id": 6799,
                                "name": "Literal",
                                "src": "305:5:16"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 1000000000000000000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "int_const 1000000000000000000"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 6800,
                                        "name": "Literal",
                                        "src": "314:2:16"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3138",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 18",
                                          "value": "18"
                                        },
                                        "id": 6801,
                                        "name": "Literal",
                                        "src": "320:2:16"
                                      }
                                    ],
                                    "id": 6802,
                                    "name": "BinaryOperation",
                                    "src": "314:8:16"
                                  }
                                ],
                                "id": 6803,
                                "name": "TupleExpression",
                                "src": "313:10:16"
                              }
                            ],
                            "id": 6804,
                            "name": "BinaryOperation",
                            "src": "305:18:16"
                          }
                        ],
                        "id": 6805,
                        "name": "FunctionCall",
                        "src": "287:37:16"
                      }
                    ],
                    "id": 6806,
                    "name": "ExpressionStatement",
                    "src": "287:37:16"
                  }
                ],
                "id": 6807,
                "name": "Block",
                "src": "277:54:16"
              }
            ],
            "id": 6808,
            "name": "FunctionDefinition",
            "src": "252:79:16"
          }
        ],
        "id": 6809,
        "name": "ContractDefinition",
        "src": "57:277:16"
      }
    ],
    "id": 6810,
    "name": "SourceUnit",
    "src": "0:334:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.3+commit.8dda9521.Emscripten.clang"
  },
  "networks": {
    "1666700000": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6cE8Bf2e6eee78E88B567c36B2Ac56f50e69eae3",
      "transactionHash": "0x29d4355bd1b24ace23a5df0c32d88ceff1a3aa025cae8b387122a84811a5ddad"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-12-22T19:06:41.456Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}